version: 2.1
orbs:
  pus:
    executors:

      pus-pipeline:
        docker:
          - image: navikt/pus-pipeline

    commands:

      check_mvn_cache:
        steps:
          - run:
              name: Last ned settings.xml
              command: |
                curl -o settings.xml -L -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3.raw" "api.github.com/repos/navikt/pus-pipeline/contents/settings.xml"
          - restore_cache:
              keys:
                - v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "settings.xml" }}
          - run: mvn -B -s settings.xml dependency:go-offline
          - save_cache:
              paths:
                - ~/.m2
              key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "settings.xml" }}

      check_npm_cache:
        steps:
          - restore_cache:
              key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          - run: npm ci
          - save_cache:
              key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
              paths:
                - /root/.npm

      build_and_push_docker_image:
        parameters:
          image_tag:
            type: string
        steps:
          - run:
              name: Bygg docker image
              command: |
                docker build -t navikt/$CIRCLE_PROJECT_REPONAME .
                docker tag navikt/$CIRCLE_PROJECT_REPONAME navikt/$CIRCLE_PROJECT_REPONAME:<<parameters.image_tag>>
          - run:
              name: Push docker image
              command: |
                echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
                docker push navikt/$CIRCLE_PROJECT_REPONAME
                echo "Pushet versjon <<parameters.image_tag>> av $CIRCLE_PROJECT_REPONAME"
                echo "https://cloud.docker.com/u/navikt/repository/docker/navikt/$CIRCLE_PROJECT_REPONAME"

      set_version_and_tag_repo:
        steps:
          - run:
              name: Sett versjon
              command: echo "export VERSION=$(git rev-list --count HEAD).$(date +'%Y%m%d.%H%M')" >> $BASH_ENV
          - run:
              name: Tag git repo
              command: node /tag-repo.js $CIRCLE_PROJECT_REPONAME $VERSION

      build-frontend:
        steps:
            - checkout
            - check_npm_cache
            - run: npm run test
            - run: npm run build

    jobs:

      test-backend:
        executor: pus-pipeline
        steps:
          - checkout
          - check_mvn_cache
          - run: mvn -B verify
          - store_test_results:
              path: target/surefire-reports

      test-frontend:
        executor: pus-pipeline
        steps:
          - checkout
          - check_npm_cache
          - run: npm run test

      deploy-backend:
        executor: pus-pipeline
        steps:
          - checkout
          - setup_remote_docker
          - add_ssh_keys
          - check_mvn_cache
          - run: mvn -B -s settings.xml package
          - store_test_results:
              path: target/surefire-reports
          - set_version_and_tag_repo
          - build_and_push_docker_image:
              image_tag: $VERSION
          - run:
              name: Oppdater pto-iac
              command: node /update-iac.js $VERSION

      deploy-frontend:
        executor: pus-pipeline
        steps:
          - checkout
          - setup_remote_docker
          - add_ssh_keys
          - build-frontend
          - set_version_and_tag_repo
          - build_and_push_docker_image:
              image_tag: $VERSION

      build-frontend:
        executor: pus-pipeline
        steps:
          - build-frontend


workflows:
  version: 2
  commit:
    jobs:
      - pus/test-backend:
          context: pus
          filters:
            branches:
              ignore: master
      - pus/test-frontend:
          context: pus
          filters:
            branches:
              ignore: master
      - pus/build-frontend:
          context: pus
          filters:
            branches:
              only: master
      - pus/deploy-backend:
          requires:
            - pus/build-frontend
          context: pus
          filters:
            branches:
              only: master

